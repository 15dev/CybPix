---

image: docker:stable
variables:
  IMAGE: $CI_REGISTRY_IMAGE
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
stages:
  - build
  - push
  - deploy

services:
- $RUNNER_IMAGE

#Build docker image:
#  stage: build
#  before_script: &before_script
#    - echo $CI_REGISTRY
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#  script:
#    - cat $SSHKey4CybPix > SSHKey4CybPix
#    - docker build -t $IMAGE:$CI_COMMIT_SHA .
#    - docker push $IMAGE:$CI_COMMIT_SHA

#Push image:
#  stage: push
#  before_script: *before_script
#  script:
#    - docker pull $IMAGE:$CI_COMMIT_SHA
#    - docker tag $IMAGE:$CI_COMMIT_SHA $IMAGE:latest
#    - docker push $IMAGE:latest

Deploy:
  stage: deploy
  image: alpine/k8s:1.14.9
  environment:
    name: production
  script:
    - mkdir $HOME/.kube
    - cp $KUBECONFIG $HOME/.kube/config
    - cat $HOME/.kube/config
#    - apk update  && apk add --no-cache curl
#    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
#    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-context $(kubectl config current-context)
    - 'printf "apiVersion: v1\nkind: Secret\n$(kubectl create secret docker-registry gitlab-registry --docker-server=$CI_REGISTRY --docker-username=$GITLAB_REGISTRY_USER --docker-password=$GITLAB_REGISTRY_TOKEN --docker-email=$GITLAB_USER_EMAIL --docker-email=GITLAB_REGISTRY_EMAIL -o yaml --dry-run)" | kubectl apply -f -'
    - sed -i 's/_APP_NAME_/'"$CI_PROJECT_NAME"'/g; s/_VERSION_/'"$CI_COMMIT_SHA"'/g' k8s/deployment.yaml;
    - sed -i 's/_APP_NAME_/'"$CI_PROJECT_NAME"'/g; s/_VERSION_/'"$CI_COMMIT_SHA"'/g' k8s/ingress.yaml;
    - sed -i 's/_APP_NAME_/'"$CI_PROJECT_NAME"'/g; s/_VERSION_/'"$CI_COMMIT_SHA"'/g' k8s/service.yaml;
    - kubectl apply -f k8s/deployment.yaml
    - kubectl apply -f k8s/service.yaml
    - kubectl apply -f k8s/ingress.yaml
    - kubectl patch deployment $CI_PROJECT_NAME -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
